group_by(LST) %>%
summarise(count=n()) %>%
ungroup()
sort(unique(mh2015_puf$LST))
states=sort(unique(mh2015_puf$LST))
states
df1c=mh2015_puf %>%
filter(FACILITYTYPE == 6
,! LST %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(LST) %>%
summarise(count=n())
unique(df1c$LST)
table(df1c$LST)
mh2015_puf$FACILITYTYPE
table(mh2015_puf$FACILITYTYPE)
unique(mh2015_puf$FACILITYTYPE)
df1c=mh2015_puf %>%
filter(FACILITYTYPE == '[10] Veterans Administration medical center (VAMC) or other VA health care facility'
,! LST %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(LST) %>%
summarise(count=n())
unique(mh2015_puf$FACILITYTYPE)
unique(mh2015_puf$FACILITYTYPE)[1]
unique(mh2015_puf$FACILITYTYPE)[10]
df1c=mh2015_puf %>%
filter(FACILITYTYPE == 'Veterans Administration medical center (VAMC) or other VA health care facility'
,! LST %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(LST) %>%
summarise(count=n())
df1c
df1c$LST
df1c$LST=='AK'
class(df1c$LST)
df1c$LST
df1c$LST=='AK'
df1c$LST=='AL'
any(df1c$LST=='AL')
any(df1c$LST==1)
table(df1c$LST)
df1c
#some cleaning
df = mh2015_puf %>%
mutate(STATE = trim(as.character(LST)))
#some cleaning
df = mh2015_puf %>%
mutate(STATE = trimws(as.character(LST).'both'))
#some cleaning
df = mh2015_puf %>%
mutate(STATE = trimws(as.character(LST),'both'))
sort(unique(df$STATE))
df1c=mh2015_puf %>%
filter(FACILITYTYPE == 'Veterans Administration medical center (VAMC) or other VA health care facility'
,! STATE %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(LST) %>%
summarise(count=n())
df1c=df %>%
filter(FACILITYTYPE == 'Veterans Administration medical center (VAMC) or other VA health care facility'
,! STATE %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(LST) %>%
summarise(count=n())
df1c
df1c=df %>%
filter(FACILITYTYPE == 'Veterans Administration medical center (VAMC) or other VA health care facility'
,! STATE %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(STATE) %>%
summarise(count=n())
ggplot(data=df1c,aes(x=STATE,fill=STATE,y=count)) +
geom_col() +
coord_flip()
ggplot(data=df1c,aes(x=STATE,fill=STATE,y=count)) +
geom_col(legend=F) +
coord_flip()
ggplot(data=df1c,aes(x=STATE,fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F)
ggplot(data=df1c,aes(x=STATE,fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
coord_flip()
ggplot(data=df1c,aes(x=desc(STATE),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
coord_flip()
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,STATE,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
coord_flip()
ggplot(data=df1c,aes(x=forcats::fct_inorder(STATE),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
coord_flip()
ggplot(data=df1c,aes(x=forcats::fct_ord(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
coord_flip()
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
coord_flip()
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
title('Veterns Administration Veteran Centers by State')
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
geom_tile('Veterns Administration Veteran Centers by State') +
coord_flip()
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
geom_title('Veterns Administration Veteran Centers by State') +
coord_flip()
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip()
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs()
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_tufte()
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(title=element_text(hjust=0))
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(title=element_text(hjust=1))
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(title=element_text(hjust=-1))
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=1))
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=0))
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=-1))
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
stateSize = read.csv('statesize.csv')
stateSize
stateSize$Abbrev
df = df %>%
left_join(stateSize, by=c('STATE'='Abbrev'))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
library(DT)
library(tidyverse)
library(ggthemes)
load('N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda')
dim(mh2015_puf)
#some cleaning
df = mh2015_puf %>%
mutate(STATE = trimws(as.character(LST),'both'))
sort(unique(df$STATE))
df1c=df %>%
filter(FACILITYTYPE == 'Veterans Administration medical center (VAMC) or other VA health care facility'
,! STATE %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(STATE) %>%
summarise(count=n())
ggplot(data=df1c,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
df = df %>%
left_join(stateSize, by=c('STATE'='Abbrev'))
df$SqMiles
unique(df$LST)
#state col has been fixed on point 1a
write(unique(df$LST))
#state col has been fixed on point 1a
write(unique(df$LST)[1])
#state col has been fixed on point 1a
message('|',unique(df$LST)[1],'|')
#LST col has been fixed on point 1a
#LST has spaces afte the State, on 1a I user trimws to remove them and mapped the new value to STATE column
message('|',unique(df$LST)[1:5],'|')
#LST col has been fixed on point 1a
#LST has spaces afte the State, on 1a I user trimws to remove them and mapped the new value to STATE column
message(paste0('|',unique(df$LST)[1:5],'|'))
#LST col has been fixed on point 1a
#LST has spaces afte the State, on 1a I user trimws to remove them and mapped the new value to STATE column
message(paste0(unique(df$LST)[1:5],collapse='|'))
df = mh2015_puf %>%
mutate(STATE = trimws(as.character(LST),'both')) %>% #Fixing LST field, removing white spaces and remapping as STATE
left_join(stateSize, by=c('STATE'='Abbrev')) #merging with stateSize
df1c
#I already corrected the LST  on 1a, mapped now as STATE :)
df2b = df1c %>%
left_join(stateSize, by=c('STATE'='Abbrev')) #merging with stateSize
df2b
summary(df2b)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
library(DT)
library(tidyverse)
library(ggthemes)
load('N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda')
dim(mh2015_puf)
#Fixing LST field, removing white spaces and remapping as STATE
df = mh2015_puf %>%
mutate(STATE = trimws(as.character(LST),'both'))
sort(unique(df$STATE))
dfSummary=df %>%
filter(FACILITYTYPE == 'Veterans Administration medical center (VAMC) or other VA health care facility'
,! STATE %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(STATE) %>%
summarise(count=n())
ggplot(data=dfSummary,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
library(DT)
library(tidyverse)
library(ggthemes)
load('N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda')
dim(mh2015_puf)
#Fixing LST field, removing white spaces and remapping as STATE
df = mh2015_puf %>%
mutate(STATE = trimws(as.character(LST),'both'))
sort(unique(df$STATE))
dfSummary=df %>%
filter(FACILITYTYPE == 'Veterans Administration medical center (VAMC) or other VA health care facility'
,! STATE %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(STATE) %>%
summarise(count=n())
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
library(DT)
library(tidyverse)
library(ggthemes)
load('N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda')
dim(mh2015_puf)
#Fixing LST field, removing white spaces and remapping as STATE
df = mh2015_puf %>%
mutate(STATE = trimws(as.character(LST),'both'))
sort(unique(df$STATE))
dfSummary=df %>%
filter(FACILITYTYPE == 'Veterans Administration medical center (VAMC) or other VA health care facility'
,! STATE %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(STATE) %>%
summarise(count=n())
ggplot(data=dfSummary,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
stateSize = read.csv('statesize.csv')
#LST col has been fixed on point 1a
#LST has spaces afte the State, on 1a I user trimws to remove them and mapped the new value to STATE column
message(paste0(unique(df$LST)[1:5],collapse='|'))
#I already corrected the LST  on 1a, mapped now as STATE :)
dfSummary = dfSummary %>%
left_join(stateSize, by=c('STATE'='Abbrev')) #merging with stateSize
summary(dfSummary)
dfSummary =  dfSummary %>%
mutate(HospSqM = SqMiles / count)
dfSummary
dfSummary =  dfSummary %>%
mutate(HospSqM = SqMiles / count / 1000)
#I already corrected the LST  on 1a, mapped now as STATE :)
dfSummary = dfSummary %>%
left_join(stateSize, by=c('STATE'='Abbrev')) #merging with stateSize
summary(dfSummary)
dfSummary
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(scales)
<<<<<<< HEAD
library(DT)
library(tidyverse)
library(ggthemes)
load('N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda')
dim(mh2015_puf)
#Fixing LST field, removing white spaces and remapping as STATE
df = mh2015_puf %>%
mutate(STATE = trimws(as.character(LST),'both'))
sort(unique(df$STATE))
dfSummary=df %>%
filter(FACILITYTYPE == 'Veterans Administration medical center (VAMC) or other VA health care facility'
,! STATE %in% c('AK','AS','GU','HI','PR','VI')
) %>%
group_by(STATE) %>%
summarise(count=n())
ggplot(data=dfSummary,aes(x=forcats::fct_reorder(STATE,count,desc=T),fill=STATE,y=count)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
stateSize = read.csv('statesize.csv')
#LST col has been fixed on point 1a
#LST has spaces afte the State, on 1a I user trimws to remove them and mapped the new value to STATE column
message(paste0(unique(df$LST)[1:5],collapse='|'))
dfSummary %>%
left_join(stateSize, by=c('STATE'='Abbrev')) #merging with stateSize
#I already corrected the LST  on 1a, mapped now as STATE :)
dfSummary = dfSummary %>%
left_join(stateSize, by=c('STATE'='Abbrev')) #merging with stateSize
summary(dfSummary)
dfSummary %>%
mutate(HospSqM = SqMiles / count / 1000)
dfSummary =  dfSummary %>%
mutate(HospSqMK = SqMiles / count / 1000)
summary(dfSummary)
ggplot(data=dfSummary,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=STATE,y=HospSqMK)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Count of Centers') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
dfSummary
View(stateSize)
ggplot(data=dfSummary,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=STATE,y=HospSqMK)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Hospitals per Thousand Square Miles') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
ggplot(data=dfSummary,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=STATE,y=HospSqMK)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Hospitals per Thousand Square Miles') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
ggplot(data=filter(dfSummary,! is.na(HospSqMK)) #removing states with no SqM (DC)
,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=STATE,y=HospSqMK)) +
geom_col() +
scale_fill_discrete(guid=F) +
ylab('Hospitals per Thousand Square Miles') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
ggplot(data=filter(dfSummary,! is.na(HospSqMK)) #removing states with no SqM (DC)
,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=Region,y=HospSqMK)) +
geom_col() +
scale_fill_discrete(guid=T) +
ylab('Hospitals per Thousand Square Miles') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
ggplot(data=filter(dfSummary,! is.na(HospSqMK)) #removing states with no SqM (DC)
,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=Region,y=HospSqMK)) +
geom_col() +
scale_fill_discrete() +
ylab('Hospitals per Thousand Square Miles') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
ggplot(data=filter(dfSummary,! is.na(HospSqMK)) #removing states with no SqM (DC)
,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=Region,y=HospSqMK)) +
geom_col() +
scale_fill_brewer(palette=2) +
ylab('Hospitals per Thousand Square Miles') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
ggplot(data=filter(dfSummary,! is.na(HospSqMK)) #removing states with no SqM (DC)
,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=Region,y=HospSqMK)) +
geom_col() +
scale_fill_brewer(palette='Paired') +
ylab('Hospitals per Thousand Square Miles') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
ggplot(data=filter(dfSummary,! is.na(HospSqMK)) #removing states with no SqM (DC)
,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=Region,y=HospSqMK)) +
geom_col() +
scale_fill_brewer(palette='Paired',n=4) +
ylab('Hospitals per Thousand Square Miles') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
ggplot(data=filter(dfSummary,! is.na(HospSqMK)) #removing states with no SqM (DC)
,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=Region,y=HospSqMK)) +
geom_col() +
scale_fill_brewer(palette='Paired') +
ylab('Hospitals per Thousand Square Miles') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
ggplot(data=filter(dfSummary,! is.na(HospSqMK)) #removing states with no SqM (DC)
,aes(x=forcats::fct_reorder(STATE,HospSqMK,desc=T),fill=Region,y=HospSqMK)) +
geom_col() +
scale_fill_brewer(palette='Set1') +
ylab('Hospitals per Thousand Square Miles') +
xlab('State') +
ggtitle('Veterns Administration Veteran Centers by State') +
coord_flip() +
ggthemes::theme_gdocs() +
theme(plot.title=element_text(hjust=.5))
=======
breweriesState = breweries %>%
group_by(State) %>%
summarise(Breweries = n()) %>%
ungroup()
DT::datatable(breweriesState,rownames = F)
knitr::opts_chunk$set(echo = TRUE)
library(DT)
install.packages("DT")
knitr::opts_chunk$set(echo = TRUE)
library(DT)
library(tidyverse)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(DT)
library(tidyverse)
library(ggplot2)
library(htmltools)
library(knitr)
library(scales)
knitr::opts_chunk$set(echo = TRUE)
library(DT)
library(tidyverse)
library(ggplot2)
library(htmltools)
library(knitr)
library(scales)
beers = read.csv('data/Beers.csv')
breweries = read.csv('data/Breweries.csv')
str(beers)
str(breweries)
breweriesState = breweries %>%
group_by(State) %>%
summarise(Breweries = n()) %>%
ungroup()
DT::datatable(breweriesState,rownames = F)
beers = read.csv('data/Beers.csv')
breweries = read.csv('data/Breweries.csv')
str(beers)
str(breweries)
breweriesState = breweries %>%
group_by(State) %>%
summarise(Breweries = n()) %>%
ungroup()
DT::datatable(breweriesState,rownames = F)
data = merge(beers,breweries,by.x='Brewery_id',by.y='Brew_ID',all=T)
h4('First 6 Observations')
DT::datatable(head(data,6),rownames = F)
h4('Last 6 Observations')
DT::datatable(tail(data,6),rownames = F)
countNA = sapply(data,function(x){sum(is.na(x))})
kable(countNA,col.names='Count of NA')
summary = data %>%
group_by(State) %>%
summarise(ABVMedian = median(ABV,na.rm=T)
,IBUMedian = median(IBU,na.rm=T)
) %>%
ungroup()
ggplot(data=filter(summary,!is.na(ABVMedian))
,aes(x=fct_reorder(State,ABVMedian,desc=T)
,y=ABVMedian)) +
geom_col() +
xlab("State") +
ylab("Median Alcohol Content") +
scale_y_continuous(labels=percent)+
coord_flip()
ggplot(data=filter(summary,!is.na(IBUMedian))
,aes(x=fct_reorder(State,IBUMedian,desc=T)
,y=IBUMedian)) +
geom_col() +
xlab("State") +
ylab("Median International Bitterness Unit") +
coord_flip()
message("The State with the maximum alcoholic (ABV) beer is:"
,arrange(data,desc(ABV))$State[1]
)
message("The State with the most bitter (IBU) beer is:"
,arrange(data,desc(IBU))$State[1]
)
summary(data$ABV)
summary(data$ABV)
ggplot(data=data,aes(x=IBU,y=ABV))+
geom_point() +
geom_smooth(method='lm') +
scale_y_continuous(labels=percent)
model=lm(data=data,formula=ABV~IBU)
model
#load first day dataset
fileLocation <- "http://stat.columbia.edu/~rachel/datasets/nyt1.csv"
nytData <- read.csv(url(fileLocation))
head(nytData)
#stratified Age groups
str(nytData)
nytData$ageGroup <- cut(nytData$Age, c(-Inf, 18, 24, 34, 44, 54, 64, Inf))
#stratified Age groups
str(nytData)
levels(nytData$ageGroup) <- c("<18", "18-24", "25-34", "35-44", "45-54", "55-64", "65+")
#stratified Age groups
str(nytData)
#Transform gender to a factor variable
nytData$Gender = factor(nytData$Gender, levels=c(1,0), labels = c("male", "female"))
head(nytData)
#stratified Age groups
str(nytData)
#plot ageGroup and impressions
ggplot(data=nytData, aes(x=ageGroup, y=Impressions, fill=ageGroup)) + geom_bar(stat="identity") + theme_bw()
#use Table(row, column) to compare age and gender for signedin
#only signedIn users have age and gender
table(nytData$ageGroup, nytData$Signed_In)
table(nytData$Gender, nytData$Signed_In)
#stratified Age groups
str(nytData)
#use Table(row, column) to compare age and gender for signedin
#only signedIn users have age and gender
table(nytData$ageGroup, nytData$Signed_In)
table(nytData$Gender, nytData$Signed_In)
table(nytData$Signed_In, nytData$Gender)
#assign not signed in as NA
nytData$ageGroup[nytData$Signed_In == 0] = NA
nytData$Gender[nytData$Signed_In == 0] = NA
summary(nytData)
#use Table(row, column) to compare age and gender for signedin
#only signedIn users have age and gender
table(nytData$ageGroup, nytData$Signed_In)
#plot again without NAs
ggplot(data=na.omit(nytData), aes(x=ageGroup, y=Impressions, fill=ageGroup)) + geom_bar(stat="identity") + theme_bw()
#(CTR = clicks/impressions) ; no CTR if there are no impressions
#conclusion <18 and 65+ have highest CTR
nytDataSubset <- subset(nytData, Impressions>0)
nytSummaryPerAgeGroup = na.omit(nytDataSubset) %>%
group_by(ageGroup) %>%
summarise(Impressions = sum(Impressions), Clicks = sum(Clicks))
na.omit(nytDataSubset) %>%
group_by(ageGroup)
head(nytDataSubset)
nytSummaryPerAgeGroup
ggplot(data=nytSummaryPerAgeGroup, aes(x=ageGroup, y=Clicks/Impressions, fill=ageGroup)) + geom_bar(stat="identity") + theme_bw()
nytData$UserSegment[nytData$Impressions > 0 & nytData$Clicks == 0] = "ImpsNoClick"
nytData$UserSegment[nytData$Impressions > 0 & nytData$Clicks > 0] = "ImpsAndClicks"
nytData$UserSegment = factor(nytData$UserSegment)
summary(nytData$UserSegment)
#get user segment data for the two click segments, omit NAs
nytUserSegmentData = na.omit(nytData) %>%
group_by(ageGroup, UserSegment, Gender) %>%
summarise(Impressions = sum(Impressions), Clicks = sum(Clicks))
head(nytUserSegmentData)
ggplot(data=subset(nytUserSegmentData,UserSegment == "ImpsAndClicks"),
aes(x=ageGroup, y=Clicks/Impressions, fill=Gender)) +
geom_bar(colour="black", stat="identity", position=position_dodge(), size=0.3) +
scale_fill_hue(name="Gender of user segment") +
xlab("Age category") +
ylab("CTR") +
ggtitle("CTR rates by age categories and gender for the ImpressionsAndClicks segment") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
va <- load('N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda')
str(va)
va
str(mh2015_puf)
loaded.vars <- load('N-MHSS-2015-DS0001-data/N-MHSS-2015-DS0001-data-r.rda')
loaded.vars
va <- mh2015_puf
head(va)
head(va$LST)
unique(va$LST)
print (paste("All State Abbreviations: ", unique(va$LST), sep = ""))
print (paste("All State Abbreviations: ", unique(va$LST), sep = "", collapse = " "))
print ("All State Abbreviations: ")
unique(va$LST)
va %>% group_by(LST)
va_byState <- va %>% group_by(LST) %>% summarize()
va_byState <- va %>% group_by(LST) %>% summarise(Count = count(LST))
va_byState <- va %>% group_by(LST)
va_byState
va_byState <- va %>% group_by(LST) %>% summarise(Count = count(CASEID))
va_byState <- va %>% group_by(LST) %>% summarise(Count = unique(CASEID))
va_byState <- va %>% group_by(LST) %>% summarise(Count = sum(MHINTAKE))
va_byState <- va %>% group_by(LST) %>% summarise(Count = count(CASEID))
va_byState <- va %>% group_by(LST) %>% summarise()
va_byState
va_byState <- va %>% count(LST) #group_by(LST) %>% summarise()
va_byState
str(va_byState)
drops <- c('AK','HI','PR', 'AS', 'FM', 'GU', 'MH', 'MP', 'PW', 'PR', 'VI') # http://www.stateabbreviations.us/
va_byState <- va %>% count(LST) # Count is a combination of group_by(LST) and summarize()
drops <- c('AK','HI','PR', 'AS', 'FM', 'GU', 'MH', 'MP', 'PW', 'PR', 'VI') # http://www.stateabbreviations.us/
va_byState [va_byState['LST'] != drops,  ]
drops <- c('AK','HI','PR', 'AS', 'FM', 'GU', 'MH', 'MP', 'PW', 'PR', 'VI') # http://www.stateabbreviations.us/
va_byState [va_byState['LST'] %in% drops,  ]
va_byState [va_byState['LST'] %in% drops]
va_byState['LST'] %in% drops
va_byState$LST
drops <- c('AK','HI','PR', 'AS', 'FM', 'GU', 'MH', 'MP', 'PW', 'PR', 'VI') # http://www.stateabbreviations.us/
va_byState['LST'] %in% drops
va_byState[va_byState$LST %in% drops, ]
va_byState
drops
va_byState$LST == 'AK'
str(va_byState)
drops <- as.factor(c('AK','HI','PR', 'AS', 'FM', 'GU', 'MH', 'MP', 'PW', 'PR', 'VI')) # http://www.stateabbreviations.us/
drops
va_byState$LST == 'AK'
va_byState$LST
va_byState$LST = 'AK'
va_byState$LST
va_byState <- va %>% count(LST) # Count is a combination of group_by(LST) and summarize()
subset(va_byState, LST %in% drops)
subset(va_byState, count > 10)
str(va_byState)
knitr::opts_chunk$set(echo = TRUE)
library(DT)
library(tidyverse)
library(ggplot2)
library(htmltools)
library(knitr)
library(scales)
beers = read.csv('data/Beers.csv')
breweries = read.csv('data/Breweries.csv')
str(beers)
str(breweries)
breweriesState = breweries %>%
group_by(State) %>%
summarise(Breweries = n()) %>%
ungroup()
DT::datatable(breweriesState,rownames = F)
data = merge(beers,breweries,by.x='Brewery_id',by.y='Brew_ID',all=T)
h4('First 6 Observations')
DT::datatable(head(data,6),rownames = F)
h4('Last 6 Observations')
DT::datatable(tail(data,6),rownames = F)
countNA = sapply(data,function(x){sum(is.na(x))})
kable(countNA,col.names='Count of NA')
summary = data %>%
group_by(State) %>%
summarise(ABVMedian = median(ABV,na.rm=T)
,IBUMedian = median(IBU,na.rm=T)
) %>%
ungroup()
ggplot(data=filter(summary,!is.na(ABVMedian))
,aes(x=fct_reorder(State,ABVMedian,desc=T)
,y=ABVMedian)) +
geom_col() +
xlab("State") +
ylab("Median Alcohol Content") +
scale_y_continuous(labels=percent)+
coord_flip()
ggplot(data=filter(summary,!is.na(IBUMedian))
,aes(x=fct_reorder(State,IBUMedian,desc=T)
,y=IBUMedian)) +
geom_col() +
xlab("State") +
ylab("Median International Bitterness Unit") +
coord_flip()
message("The State with the maximum alcoholic (ABV) beer is:"
,arrange(data,desc(ABV))$State[1]
)
message("The State with the most bitter (IBU) beer is:"
,arrange(data,desc(IBU))$State[1]
)
summary(data$ABV)
ggplot(data=data,aes(x=IBU,y=ABV))+
geom_point() +
geom_smooth(method='lm') +
scale_y_continuous(labels=percent)
model=lm(data=data,formula=ABV~IBU)
model
View(breweries)
View(breweries)
>>>>>>> 139798a96ebfc2cdc73b618ca839411b3d75d591
